<?phpfunction processUserSubscription(){	    require("class.alzorah.configs.php");    //require_once('recaptchalib.php');    $configs = new AlzorahConfigs();	$valid = true;	$selected_interest = "";			// Validation: Name	if(!$_GET['name'] || preg_match( "/[\r\n]/", $_GET['name'] )){         $errors[] = "Please provide valid Name";         $valid = false;    }        // Validation: Email    if(!$_GET['email']  || preg_match( "/[\r\n]/", $_GET['email'])){         $errors[] = "Please provide a valid email address";         $valid = false;            } else {        if(!preg_match("/^[_a-z0-9-]+(\.[_a-z0-9-]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*$/i", $_GET['email'])) {            $errors[] = "The provided email address is invalid";             $valid = false;        }    }		// Validation: Phone	if($_GET['phone'] && !preg_match("/^[+]?([\d]{0,3})?[\(\.\-\s]?([\d]{3})[\)\.\-\s]*([\d]{3})[\.\-\s]?([\d]{4})$/", $_GET['phone'])) {		$errors[] = "Please provide a valid phone number";		$valid = false;	}    //validate Recaptcha	/*    $privatekey = $configs->CaptchaPrivatekey;    $resp = recaptcha_check_answer ($privatekey,        $_SERVER["REMOTE_ADDR"],        $_GET["recaptcha_challenge_field"],        $_GET["recaptcha_response_field"]);    if (!$resp->is_valid) {        $errors[] = "Incorrect security code";        $valid = false;    }	*/		$message = "";	if($valid){		require_once('MCAPI.class.php');		// grab an API Key from http://admin.mailchimp.com/account/api/		$api = new MCAPI('c2caeada471fbad1c38897f0d4f38caa-us9');				// grab your List's Unique Id by going to http://admin.mailchimp.com/lists/		// Click the "settings" link for the list - the Unique Id is at the bottom of that page. 		$list_id = "862a8a31a5";								$merge_vars = array('NAME'=>$_GET['name'], 'PHONE'=>$_GET['phone'],					  'GROUPINGS'=>array(							array('name'=>'Interested in', 'groups'=>$_GET['selected_interest'])							)						);		if($api->listSubscribe($list_id, $_GET['email'], $merge_vars) === true) {			// It worked!				$message = 'success';					}else{			// An error ocurred, return error message				$message = "<span class='error'>" . $api->errorMessage ."</span>";		}				} else {				$message = "<ul class='error'>";		foreach ($errors as $error) {			$message .= "<li>$error</li>";		}		$message .= "</ul>";			}		$data = new stdClass();	$data->html = base64_encode($message);	return json_encode($data);	}// If being called via callback, autorun the functionif($_GET['callback']){ echo processUserSubscription(); }?>