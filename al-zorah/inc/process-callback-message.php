<?phpfunction processCallbackRequest(){        require("class.alzorah.configs.php");    //require_once('recaptchalib.php');    $configs = new AlzorahConfigs();	$valid = true;	// Validation: Name	if(!$_GET['name'] || preg_match( "/[\r\n]/", $_GET['name'] )){ 		$errors[] = "Please provide valid Name"; 		$valid = false;	}    // Validation: Name    if(!$_GET['phone'] || preg_match( "/[\r\n]/", $_GET['name'] )){         $errors[] = "Please provide a valid phone number";         $valid = false;    }		// Validation: Phone	if($_GET['phone'] && !preg_match("/^[+]?([\d]{0,3})?[\(\.\-\s]?([\d]{3})[\)\.\-\s]*([\d]{3})[\.\-\s]?([\d]{4})$/", $_GET['phone'])) {		$errors[] = "Please provide a valid phone number";		$valid = false;	}    //validate Recaptcha	/*    $privatekey = $configs->CaptchaPrivatekey;    $resp = recaptcha_check_answer ($privatekey,        $_SERVER["REMOTE_ADDR"],        $_GET["recaptcha_challenge_field"],        $_GET["recaptcha_response_field"]);    if (!$resp->is_valid) {        $errors[] = "Incorrect security code";        $valid = false;    }	*/		$message = "";	if($valid){        require("class.phpmailer.php");        $mail = new PHPMailer();        $mail->IsSMTP(); // enable SMTP        $mail->SMTPDebug = $configs->SMTPDebug;          $mail->SMTPAuth = $configs->SMTPAuth; 		        $mail->Host = $configs->EmailHost;        $mail->Username = $configs->EmailUsername;        $mail->Password = $configs->EmailPassword;         $mail->From = $configs->MessageFrom;        $mail->FromName = $configs->MessageFromName;        $mail->AddAddress($configs->CallBackReceiverEmail, $configs->CallBackReceiverName);        $mail->WordWrap = $configs->EmailWordWrap;         $mail->IsHTML(true);        $mail->Subject = "Call back request from: ".$_GET['name'];        $mail->Body    = "Name: ". $_GET['name'] ."<br />Phone: ".$_GET['phone'];        $mail->AltBody = "Name: ". $_GET['name'] ."\n Phone: ".$_GET['phone'];        if(!$mail->Send())        {           $message = $mail->ErrorInfo;        } else {            $message = 'success';        }				} else {				$message = "<ul class='error'>";		foreach ($errors as $error) {			$message .= "<li>$error</li>";		}		$message .= "</ul>";			}		$data = new stdClass();	$data->html = base64_encode($message);	return json_encode($data);	}// If being called via callback, autorun the functionif($_GET['callback']){ echo processCallbackRequest(); }?>